type: object
required:
  - name
additionalProperties: false
properties:
  description:
    type: string
    description: Describes the parameter. This is shown as a help text in the user interface.
  pass-as:
    type: string
    default: "--{name}={value}"
    description: |
      How to pass the parameter to the command.
      Defaults to `--{name}={value}` (or `--{name}` for flags).
  type:
    type: string
    enum:
      - flag
      - float
      - integer
      - string
    default: string
    description: The type of the parameter.
  min:
    type: number
    description: |
      The minimum accepted value for the parameter.
      Only applicable to integer/float parameters.
  max:
    type: number
    description: |
      The maximum accepted value for the parameter.
      Only applicable to integer/float parameters.
  optional:
    type: boolean
    default: false
    description: |
      Whether this parameter is optional.
      Optional parameters may be disabled in the user interface.
      Not applicable to flag parameters; they're always optional in a sense.
  name:
    type: string
    description: The symbolic name of this parameter. This must be unique within a Step.
  choices:
    type: array
    description: |
      If choices are set, the user may only choose from these choices for the parameter.
      Not applicable to flag parameters.
  default:
    description: The default value for the parameter.
  pass-true-as:
    type: string
    description: |
      How to pass flag (boolean) parameters when the flag is true.
      If either pass-true-as or pass-false-as are set, pass-as is not used.
  pass-false-as:
    type: string
    description: |
      How to pass flag (boolean) parameters when the flag is false.
      If either pass-true-as or pass-false-as are set, pass-as is not used.
  multiple:
    type: string
    enum:
      - none
      - repeat
      - separate
    default: none
    description: |
      Whether to allow multiple values for this parameter, and how to pass them on the
      command line. Parameters set to `repeat` will be repeated using the `--pass-as`
      pattern, while `separate` will interpolate all values into a single `--pass-as` value
      placeholder using the `multiple-separator`.
      `multiple` is not available for flag parameters.
  multiple-separator:
    type: string
    default: ","
    description: |
      The separator to use when interpolating multiple values into a command parameter.
      Defaults to a comma.
  widget:
    oneOf:
      - type: object
        required:
          - type
        properties:
          type:
            type: string
          settings:
            type: object
      - type: string
    description: |
      UI widget used for editing parameter values

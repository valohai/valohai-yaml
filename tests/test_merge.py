import glob
import os

import pytest
from valohai_yaml import parse
from valohai_yaml.objs.merge_mode import MergeMode

def read_test_data():
    """
    Expected files (tests/test_yaml):
        mytest.parsed_from_py.valohai.yaml -- Configuration generated by valohai-utils AST parser
        mytest.original.valohai.yaml -- Original valohai.yaml
        mytest.expected.valohai.yaml -- Expected valohai.yaml after merge
    """
    test_data = []
    for parsed_path in glob.glob("tests/yaml_merge/PythonParser/*.parsed_from_py.valohai.yaml"):
        dirname = os.path.dirname(parsed_path)
        name, extension = os.path.splitext(os.path.basename(parsed_path))
        name = name.split(".")[0]
        test_data.append((
            "%s/%s.original.valohai.yaml" % (dirname, name),
            parsed_path,
            "%s/%s.expected.valohai.yaml" % (dirname, name)
        ))
    return test_data


@pytest.mark.parametrize("original_yaml, parsed_yaml, expected_yaml", read_test_data())
def test_yaml_merge_from_python_parser(original_yaml, parsed_yaml, expected_yaml):
    with open(original_yaml, "r") as yaml_file:
        original_config = parse(yaml_file)
    with open(parsed_yaml, "r") as yaml_file:
        parsed_config = parse(yaml_file)

    new_config = original_config.merge_with(parsed_config, MergeMode.PythonParser)

    with open(expected_yaml, "r") as expected_yaml:
        assert new_config.to_yaml() == expected_yaml.read()
